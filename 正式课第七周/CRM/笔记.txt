1、CRM客户管理系统
[管理系统]
  OA->企业办公管理系统
  ERP->企业战略管理系统
  CMS->内容发布管理系统
  进销存管理系统(物流管理系统)

2、平时在真实的项目中我们是如何开发的(前端)
  产品
  UI设计师(美工) ->把产品的思想和需求转化为可视的效果图(PSD、skech)

  [开发环节]
    前端:
      切页面+写效果

      项目是非完全前后端分离的,我们做完第一步,把页面和代码给后台即可(有的公司也需要我们前端学点后台技术来做数据绑定)

      项目是完全前后端分离的，后台用什么技术去实现的，以及怎么实现的和我们前端没有半毛钱关系，我们只需要找后台人员要数据获取的接口（API文档）。

    后台(DB)

  开发完成后先在测试服务器上发布,提交给测试测;测试发现BUG后会把问题提交给前端,前端需要定位问题的原因(是前端的问题还是后台的问题);
  测试发现BUG后怎么提交给我们?
    有些公司有自己的BUG管理平台
    直接发QQ或者说
  测试都测完成后,需要把项目部署到正式的服务器上


3、我们自己用后台创建了一个服务,端口号80,以后访问项目的时候我们都需要基于80这个服务访问,不能使用WB创建的63342这个服务

======================================
前端开发工程师职责:
1、100%还原设计稿,使用PS+HTML+CSS切图、写结构、写样式
2、使用JS或者相关的组件插件实现交互效果(例如:轮播图...)
3、使用AJAX等相关技术和服务器之间进行数据的交互(数据的增删改查)
4、项目自动化打包和部署=>项目优化
...
PS+HTML(5)+CSS(3)+JS+类库或者插件或者组件或者框架(JQ、Angular、vue、React...)+GIT+自动化打包(gulp、webpack...)+AJAX/JSONP+HTTP...

类库:方法库,不具备的任何的业务逻辑,只是提供常用的方法(JQ、ZEPTO)
插件:一般都是针对于某一种特殊的业务需求定制的(轮播图插件、弹出层插件...) JS插件
组件(UI组件):把HTML\CSS\JS都封装好了,我们只需要引入对应的CSS和JS,按照要求搭建结构,这样相关的功能就实现了(bootstrap、swiper)
框架:具备一定的开发思想(MVC、MVVM) Angular、backbone、seajs...


后台开发工程师:
1、创建一个服务，如果客户端请求的是静态文件，服务器端需要把资源文件中的源代码返回给客户端进行渲染(发布项目:IIS、Apache、nginx...)
2、对照着API文档，把所有接口对应的功能都去实现了
3、优化:代码优化、业务逻辑优化、数据库优化、服务器优化...
至少熟练使用一门后台语言(PHP、JAVA、C#、NODE...)、会一些前端、熟练掌握两到三种数据库(mysql、sqlserver、oracle...)、熟悉操作系统和服务器、会网络、会加班熬得了夜...


var customData = fs.readFileSync('./json/custom.json');
customData.trim().length === 0 ? customData = '[]' : null;//->可加可不加,一般文档中在没有任何数据的时候都会存留一个空括号
customData = JSON.parse(customData);

var result = {
    code: 1,
    msg: 'ERROR',
    data: null
};



























